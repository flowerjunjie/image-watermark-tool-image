name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: npm

      - name: Install dependencies
        run: npm ci
        
      - name: Remove canvas dependency for smaller builds
        run: |
          npm uninstall canvas
          npm install --save-dev canvas

      - name: Build app
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npm run build-small
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            npm run build:mac
          fi
        shell: bash

      - name: List artifacts
        run: ls -la dist/
        shell: bash
        
      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: |
            dist/*.exe
            dist/win-unpacked/
          retention-days: 5
          
      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: |
            dist/*.dmg
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Display structure
        run: ls -R
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: |
            windows-build/*.exe
            macos-build/*.dmg 